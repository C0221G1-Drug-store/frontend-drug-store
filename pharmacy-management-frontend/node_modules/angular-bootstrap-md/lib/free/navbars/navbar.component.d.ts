import { NavbarService } from './navbar.service';
import { AfterContentChecked, AfterViewInit, ElementRef, OnInit, Renderer2, ChangeDetectorRef, NgZone, OnDestroy, EventEmitter } from '@angular/core';
import { LinksComponent } from './links.component';
import * as ɵngcc0 from '@angular/core';
export declare class NavbarComponent implements AfterViewInit, OnInit, AfterContentChecked, OnDestroy {
    renderer: Renderer2;
    private _navbarService;
    private _cdRef;
    private _ngZone;
    private _document;
    iconBackground: string | string[];
    SideClass: string;
    containerInside: boolean;
    collapseId: string;
    scrollSensitivity: number;
    scrollableNavbar: boolean;
    shown: EventEmitter<any>;
    hidden: EventEmitter<any>;
    private _destroy$;
    navbarLinkClicks: any;
    isShown: boolean;
    doubleNav: boolean;
    height: number;
    duration: number;
    collapse: boolean;
    showClass: boolean;
    collapsing: boolean;
    private _itemsLength;
    ariaExpanded: boolean;
    el: ElementRef;
    mobile: ElementRef;
    navbar: ElementRef;
    container: ElementRef;
    toggler: ElementRef;
    links: LinksComponent;
    constructor(renderer: Renderer2, _navbarService: NavbarService, _cdRef: ChangeDetectorRef, _ngZone: NgZone, _document: any);
    closeNavbarOnClick(navbarLinkClicks: any): void;
    addTogglerIconClasses(): void;
    private _listenToScroll;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    toggle(): void;
    show(): void;
    hide(): void;
    get displayStyle(): "" | "flex";
    onResize(event: any): void;
    ngAfterContentChecked(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavbarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NavbarComponent, "mdb-navbar", never, {
    "containerInside": "containerInside";
    "collapseId": "collapseId";
    "scrollSensitivity": "scrollSensitivity";
    "scrollableNavbar": "scrollableNavbar";
    "iconBackground": "iconBackground";
    "SideClass": "SideClass";
}, {
    "shown": "shown";
    "hidden": "hidden";
}, ["links"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuYXZiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0Q0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOYXZiYXJTZXJ2aWNlIH0gZnJvbSAnLi9uYXZiYXIuc2VydmljZSc7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRDaGVja2VkLCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZSwgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExpbmtzQ29tcG9uZW50IH0gZnJvbSAnLi9saW5rcy5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmF2YmFyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25Jbml0LCBBZnRlckNvbnRlbnRDaGVja2VkLCBPbkRlc3Ryb3kge1xuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgcHJpdmF0ZSBfbmF2YmFyU2VydmljZTtcbiAgICBwcml2YXRlIF9jZFJlZjtcbiAgICBwcml2YXRlIF9uZ1pvbmU7XG4gICAgcHJpdmF0ZSBfZG9jdW1lbnQ7XG4gICAgaWNvbkJhY2tncm91bmQ6IHN0cmluZyB8IHN0cmluZ1tdO1xuICAgIFNpZGVDbGFzczogc3RyaW5nO1xuICAgIGNvbnRhaW5lckluc2lkZTogYm9vbGVhbjtcbiAgICBjb2xsYXBzZUlkOiBzdHJpbmc7XG4gICAgc2Nyb2xsU2Vuc2l0aXZpdHk6IG51bWJlcjtcbiAgICBzY3JvbGxhYmxlTmF2YmFyOiBib29sZWFuO1xuICAgIHNob3duOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBoaWRkZW46IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHByaXZhdGUgX2Rlc3Ryb3kkO1xuICAgIG5hdmJhckxpbmtDbGlja3M6IGFueTtcbiAgICBpc1Nob3duOiBib29sZWFuO1xuICAgIGRvdWJsZU5hdjogYm9vbGVhbjtcbiAgICBoZWlnaHQ6IG51bWJlcjtcbiAgICBkdXJhdGlvbjogbnVtYmVyO1xuICAgIGNvbGxhcHNlOiBib29sZWFuO1xuICAgIHNob3dDbGFzczogYm9vbGVhbjtcbiAgICBjb2xsYXBzaW5nOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2l0ZW1zTGVuZ3RoO1xuICAgIGFyaWFFeHBhbmRlZDogYm9vbGVhbjtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBtb2JpbGU6IEVsZW1lbnRSZWY7XG4gICAgbmF2YmFyOiBFbGVtZW50UmVmO1xuICAgIGNvbnRhaW5lcjogRWxlbWVudFJlZjtcbiAgICB0b2dnbGVyOiBFbGVtZW50UmVmO1xuICAgIGxpbmtzOiBMaW5rc0NvbXBvbmVudDtcbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLCBfbmF2YmFyU2VydmljZTogTmF2YmFyU2VydmljZSwgX2NkUmVmOiBDaGFuZ2VEZXRlY3RvclJlZiwgX25nWm9uZTogTmdab25lLCBfZG9jdW1lbnQ6IGFueSk7XG4gICAgY2xvc2VOYXZiYXJPbkNsaWNrKG5hdmJhckxpbmtDbGlja3M6IGFueSk6IHZvaWQ7XG4gICAgYWRkVG9nZ2xlckljb25DbGFzc2VzKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBfbGlzdGVuVG9TY3JvbGw7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICB0b2dnbGUoKTogdm9pZDtcbiAgICBzaG93KCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIGdldCBkaXNwbGF5U3R5bGUoKTogXCJcIiB8IFwiZmxleFwiO1xuICAgIG9uUmVzaXplKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=